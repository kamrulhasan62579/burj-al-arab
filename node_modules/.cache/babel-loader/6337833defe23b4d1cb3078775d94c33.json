{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebDevelopment\\\\react\\\\burj-al-arab-3\\\\src\\\\Components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport './Login.css';\nimport { useForm } from 'react-hook-form';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebaseConfig';\nimport { UserContext } from '../../App';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n} else {\n  firebase.app(); // if already initialized, use that one\n}\n\nconst Login = () => {\n  _s();\n\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  console.log(loggedInUser);\n  const [newUser, setNewUser] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const history = useHistory();\n  const location = useLocation();\n  let {\n    from\n  } = location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n\n  const onSubmit = data => {\n    console.log(data.password, data.email);\n\n    if (newUser) {\n      firebase.auth().createUserWithEmailAndPassword(data.email, data.password).then(res => {\n        console.log('Creating user successfull');\n        setLoggedInUser(data);\n        history.replace(from);\n      }).catch(error => {\n        console.log(error.message);\n      });\n    }\n\n    if (!newUser) {\n      firebase.auth().signInWithEmailAndPassword(data.email, data.password).then(res => {\n        console.log('user login successfull');\n        setLoggedInUser(data);\n        history.replace(from);\n      }).catch(error => {\n        console.log(error.message);\n      });\n    }\n  }; // Implement google sign in --------------------------------------------------------\n\n\n  var googleProvider = new firebase.auth.GoogleAuthProvider();\n\n  const handleGoogleSignIn = () => {\n    firebase.auth().signInWithPopup(googleProvider).then(res => {\n      setLoggedInUser(result.user);\n      console.log();\n      history.replace(from);\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [newUser ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newUserForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"First name\",\n          ...register(\"firstName\", {\n            required: true,\n            maxLength: 8\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 14\n        }, this), errors.firstName && errors.firstName.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: \"First name is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 80\n        }, this), errors.firstName && errors.firstName.type === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: \"Max length exceeded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 76\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"Last name\",\n          ...register(\"lastName\", {\n            required: true,\n            maxLength: 8\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 14\n        }, this), errors.firstName && errors.firstName.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: \"Last name is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 80\n        }, this), errors.firstName && errors.firstName.type === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: \"Max length exceeded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 76\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"Email\",\n          ...register(\"email\", {\n            required: true,\n            pattern: /\\S+@\\S+\\.\\S+/\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 14\n        }, this), errors.email && errors.email.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: \"Email is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 72\n        }, this), errors.email && errors.email.type === \"pattern\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: \"You should insert email like  /\\\\S+@\\\\S+\\\\.\\\\S+/ pattern\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"tel\",\n          placeholder: \"Mobile number\",\n          ...register(\"number\", {\n            required: true,\n            minLength: 6,\n            maxLength: 12\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 14\n        }, this), \" \", errors.number && errors.number.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: \"Mobile number is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 75\n        }, this), errors.number && errors.number.type === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: \"Max length exceeded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"password\",\n          placeholder: \"Password\",\n          ...register(\"password\", {\n            required: true,\n            pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,30}$/,\n            minLength: 8,\n            maxLength: 30\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 14\n        }, this), \" \", errors.password && errors.password.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: \"Password is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 79\n        }, this), errors.password && errors.password.type === \"pattern\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: \"Password must have min 1 uppercase letter, min 1 lowercase letter, min 1 special character, min 1 number, min 8 characters, max 30 characters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 72\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radioInput\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Are you a developer?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 18\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Developer\",\n            children: \"1. Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 22\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"Developer\", {\n              required: true\n            }),\n            type: \"radio\",\n            value: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 64\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 147\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Developer\",\n            children: \"2. No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 22\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"Developer\", {\n              required: true\n            }),\n            type: \"radio\",\n            value: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 63\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          value: \"Submit\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newUserForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"Email\",\n          ...register(\"email\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), errors.email && errors.email.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: \"Email is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 71\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"password\",\n          placeholder: \"Password\",\n          ...register(\"password\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), \" \", errors.password && errors.password.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: \"Password is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 78\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          value: \"Submit\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'blue'\n        },\n        onClick: () => setNewUser(!newUser),\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleSignIn,\n      children: \"Sign in with google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Login, \"xpZ4vYOIwAJv7v5Hdzxca/lmjZ8=\", false, function () {\n  return [useForm, useHistory, useLocation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/WebDevelopment/react/burj-al-arab-3/src/Components/Login/Login.js"],"names":["React","useContext","useState","useForm","firebase","firebaseConfig","UserContext","useHistory","useLocation","apps","length","initializeApp","app","Login","loggedInUser","setLoggedInUser","console","log","newUser","setNewUser","register","handleSubmit","formState","errors","history","location","from","state","pathname","onSubmit","data","password","email","auth","createUserWithEmailAndPassword","then","res","replace","catch","error","message","signInWithEmailAndPassword","googleProvider","GoogleAuthProvider","handleGoogleSignIn","signInWithPopup","result","user","required","maxLength","firstName","type","pattern","minLength","number","textAlign","color"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport './Login.css'\r\nimport { useForm } from 'react-hook-form';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebaseConfig';\r\nimport { UserContext } from '../../App';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\n\r\nconst Login = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    console.log(loggedInUser);\r\n  const [newUser, setNewUser] = useState(false)\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  let { from } = location.state || { from: { pathname: \"/\" } };\r\n  const onSubmit = data => {\r\n        console.log(data.password, data.email)\r\n       if (newUser) {\r\n        firebase.auth().createUserWithEmailAndPassword(data.email, data.password)\r\n        .then((res) => {\r\n         console.log('Creating user successfull');\r\n         setLoggedInUser(data)\r\n         history.replace(from);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.message);\r\n        });\r\n       }\r\n       if (!newUser) {\r\n            firebase.auth().signInWithEmailAndPassword(data.email, data.password)\r\n            .then((res) => {\r\n           console.log('user login successfull');\r\n           setLoggedInUser(data)\r\n           history.replace(from);\r\n            })\r\n            .catch((error) => {\r\n            console.log(error.message);\r\n            });\r\n       }\r\n    };\r\n// Implement google sign in --------------------------------------------------------\r\nvar googleProvider = new firebase.auth.GoogleAuthProvider();\r\nconst handleGoogleSignIn =() => {\r\n  firebase.auth()\r\n  .signInWithPopup(googleProvider)\r\n  .then((res) => {\r\n      setLoggedInUser(result.user)\r\n      console.log();\r\n      history.replace(from);\r\n  }).catch((error) => {\r\n      console.log(error.message);\r\n  });\r\n}\r\n  return (\r\n   <div>\r\n     {\r\n         newUser ? <form onSubmit={handleSubmit(onSubmit)}>\r\n         <div className=\"newUserForm\">\r\n             <input className=\"input\" type=\"text\" placeholder=\"First name\" {...register(\"firstName\", {required: true, maxLength: 8})} /> \r\n             <br/>{errors.firstName && errors.firstName.type === \"required\" && <span className=\"error\">First name is required</span>}\r\n             {errors.firstName && errors.firstName.type === \"maxLength\" && <span className=\"error\">Max length exceeded</span> }\r\n             <br/>\r\n             <input className=\"input\" type=\"text\" placeholder=\"Last name\" {...register(\"lastName\", {required: true, maxLength: 8})} />\r\n             <br/>{errors.firstName && errors.firstName.type === \"required\" && <span className=\"error\">Last name is required</span>}\r\n             {errors.firstName && errors.firstName.type === \"maxLength\" && <span className=\"error\">Max length exceeded</span> }\r\n             <br/>\r\n             <input className=\"input\" type=\"text\" placeholder=\"Email\" {...register(\"email\", {required: true, pattern: /\\S+@\\S+\\.\\S+/})} />    \r\n             <br/>{errors.email && errors.email.type === \"required\" && <span className=\"error\">Email is required</span>}\r\n             {errors.email && errors.email.type === \"pattern\" && <span className=\"error\">You should insert email like  /\\S+@\\S+\\.\\S+/ pattern</span> }\r\n             <br/>\r\n             <input className=\"input\" type=\"tel\" placeholder=\"Mobile number\" {...register(\"number\", {required: true, minLength: 6, maxLength: 12})} />   \r\n             <br/> {errors.number && errors.number.type === \"required\" && <span className=\"error\">Mobile number is required</span>}\r\n             {errors.number && errors.number.type === \"maxLength\" && <span className=\"error\">Max length exceeded</span> }\r\n             <br/>\r\n             <input className=\"input\" type=\"password\" placeholder=\"Password\" {...register(\"password\", {required: true, pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,30}$/, minLength: 8, maxLength: 30})} />\r\n             <br/> {errors.password && errors.password.type === \"required\" && <span className=\"error\">Password is required</span>}\r\n             {errors.password && errors.password.type === \"pattern\" && <span className=\"error\">Password must have min 1 uppercase letter, min 1 lowercase letter, min 1 special character, min 1 number, min 8 characters, max 30 characters.</span> }\r\n             <br/> \r\n                 <div className=\"radioInput\">\r\n                 <span>Are you a developer?</span>  <br/>\r\n                     <label htmlFor=\"Developer\">1. Yes</label> <input  {...register(\"Developer\", { required: true })} type=\"radio\" value=\"Yes\" /> <br/>\r\n                     <label htmlFor=\"Developer\">2. No</label> <input {...register(\"Developer\", { required: true })} type=\"radio\" value=\"No\" /> \r\n                 </div>\r\n             <br/>\r\n \r\n             <input className=\"input\" value=\"Submit\" type=\"submit\" />\r\n         </div>\r\n     </form>\r\n      : \r\n     <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"newUserForm\">\r\n            <input className=\"input\" type=\"text\" placeholder=\"Email\" {...register(\"email\", {required: true})} />    \r\n            <br/>{errors.email && errors.email.type === \"required\" && <span className=\"error\">Email is required</span>}\r\n            <br/>\r\n            <input className=\"input\" type=\"password\" placeholder=\"Password\" {...register(\"password\", {required: true})} />\r\n            <br/> {errors.password && errors.password.type === \"required\" && <span className=\"error\">Password is required</span>}\r\n            <br/>\r\n            <input className=\"input\" value=\"Submit\" type=\"submit\" />\r\n        </div>\r\n    </form>\r\n     } <br/>\r\n     <p style={{textAlign: 'center'}}>Already have an account? <span style={{color: 'blue'}} onClick={() => setNewUser(!newUser)}>Log In</span></p>\r\n\r\n      <button onClick={handleGoogleSignIn}>Sign in with google</button>\r\n   </div>\r\n  );\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}